{"ast":null,"code":"/**\n * Calcula o tempo detalhado entre duas datas\n * @param {Date} targetDate - Data alvo\n * @param {Date} currentDate - Data atual (opcional)\n * @returns {Object} Objeto com anos, meses, dias, horas, minutos, segundos e se é passado\n */\nexport const calculateDetailedTime = (targetDate, currentDate = new Date()) => {\n  const target = new Date(targetDate);\n  const isPast = currentDate > target;\n\n  // Calcular a diferença em milissegundos\n  let diffMs = Math.abs(currentDate - target);\n\n  // Converter para unidades de tempo\n  const seconds = Math.floor(diffMs / 1000 % 60);\n  const minutes = Math.floor(diffMs / (1000 * 60) % 60);\n  const hours = Math.floor(diffMs / (1000 * 60 * 60) % 24);\n  const days = Math.floor(diffMs / (1000 * 60 * 60 * 24) % 30);\n  const months = Math.floor(diffMs / (1000 * 60 * 60 * 24 * 30) % 12);\n  const years = Math.floor(diffMs / (1000 * 60 * 60 * 24 * 365));\n  return {\n    years,\n    months,\n    days,\n    hours,\n    minutes,\n    seconds,\n    past: isPast\n  };\n};","map":{"version":3,"names":["calculateDetailedTime","targetDate","currentDate","Date","target","isPast","diffMs","Math","abs","seconds","floor","minutes","hours","days","months","years","past"],"sources":["C:/Users/admin/Documents/trae_projects/contadordias/frontend/src/utils/timeUtils.js"],"sourcesContent":["/**\n * Calcula o tempo detalhado entre duas datas\n * @param {Date} targetDate - Data alvo\n * @param {Date} currentDate - Data atual (opcional)\n * @returns {Object} Objeto com anos, meses, dias, horas, minutos, segundos e se é passado\n */\nexport const calculateDetailedTime = (targetDate, currentDate = new Date()) => {\n  const target = new Date(targetDate);\n  const isPast = currentDate > target;\n  \n  // Calcular a diferença em milissegundos\n  let diffMs = Math.abs(currentDate - target);\n  \n  // Converter para unidades de tempo\n  const seconds = Math.floor((diffMs / 1000) % 60);\n  const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\n  const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\n  const days = Math.floor((diffMs / (1000 * 60 * 60 * 24)) % 30);\n  const months = Math.floor((diffMs / (1000 * 60 * 60 * 24 * 30)) % 12);\n  const years = Math.floor(diffMs / (1000 * 60 * 60 * 24 * 365));\n  \n  return {\n    years,\n    months,\n    days,\n    hours,\n    minutes,\n    seconds,\n    past: isPast\n  };\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,qBAAqB,GAAGA,CAACC,UAAU,EAAEC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,KAAK;EAC7E,MAAMC,MAAM,GAAG,IAAID,IAAI,CAACF,UAAU,CAAC;EACnC,MAAMI,MAAM,GAAGH,WAAW,GAAGE,MAAM;;EAEnC;EACA,IAAIE,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACN,WAAW,GAAGE,MAAM,CAAC;;EAE3C;EACA,MAAMK,OAAO,GAAGF,IAAI,CAACG,KAAK,CAAEJ,MAAM,GAAG,IAAI,GAAI,EAAE,CAAC;EAChD,MAAMK,OAAO,GAAGJ,IAAI,CAACG,KAAK,CAAEJ,MAAM,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;EACvD,MAAMM,KAAK,GAAGL,IAAI,CAACG,KAAK,CAAEJ,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;EAC1D,MAAMO,IAAI,GAAGN,IAAI,CAACG,KAAK,CAAEJ,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;EAC9D,MAAMQ,MAAM,GAAGP,IAAI,CAACG,KAAK,CAAEJ,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;EACrE,MAAMS,KAAK,GAAGR,IAAI,CAACG,KAAK,CAACJ,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;EAE9D,OAAO;IACLS,KAAK;IACLD,MAAM;IACND,IAAI;IACJD,KAAK;IACLD,OAAO;IACPF,OAAO;IACPO,IAAI,EAAEX;EACR,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}